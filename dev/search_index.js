var documenterSearchIndex = {"docs":
[{"location":"index.html#","page":"Home","title":"Home","text":"CurrentModule = OptionalArgChecks\nDocTestSetup = :(using OptionalArgChecks)","category":"page"},{"location":"index.html#OptionalArgChecks-1","page":"Home","title":"OptionalArgChecks","text":"","category":"section"},{"location":"index.html#","page":"Home","title":"Home","text":"Provides two macros, @argcheck and @skipargcheck which give users control over whether to skip argument checking for better performance.","category":"page"},{"location":"index.html#API-1","page":"Home","title":"API","text":"","category":"section"},{"location":"index.html#","page":"Home","title":"Home","text":"","category":"page"},{"location":"index.html#","page":"Home","title":"Home","text":"Modules = [OptionalArgChecks]","category":"page"},{"location":"index.html#OptionalArgChecks.@argcheck-Tuple{Any}","page":"Home","title":"OptionalArgChecks.@argcheck","text":"@argcheck ex\n\nMarks ex as an optional argument check, so when a function is called via @skipargcheck, ex will be omitted.\n\njulia> function half(x::Integer)\n           @argcheck iseven(x) || throw(DomainError(x, \"x has to be an even number\"))\n           return x รท 2\n       end\nhalf (generic function with 1 method)\n\njulia> half(4)\n2\n\njulia> half(3)\nERROR: DomainError with 3:\nx has to be an even number\n\njulia> @skipargcheck half(3)\n1\n\n\n\n\n\n","category":"macro"},{"location":"index.html#OptionalArgChecks.@skipargcheck-Tuple{Any}","page":"Home","title":"OptionalArgChecks.@skipargcheck","text":"@skipargcheck ex\n\nFor every function call in ex, expressions wrapped in @argcheck get omitted recursively.\n\n\n\n\n\n","category":"macro"}]
}
